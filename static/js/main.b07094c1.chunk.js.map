{"version":3,"sources":["components/Question.js","logo.svg","components/Quiz.js","App.js","serviceWorker.js","index.js"],"names":["Question","props","upper_limit","lower_limit","operators","n","handler","timeout","op","Math","floor","random","length","generateNumber","ul","ll","diff","parseInt","oper1","oper2","roundToTwo","num","round","React","useState","q","a","eval","s","c","ques","setQues","handleChange","e","target","value","parseFloat","handleSubmit","useEffect","type","step","onChange","toString","onClick","module","exports","Quiz","time","removeTimer","1","question","setQuestion","update","counter","setCounter","myInt","setTimeout","setValue","values","clearTimeout","onSubmit","preventDefault","Object","keys","map","x","key","style","color","isNull","Col","styled","div","Tab","App","temp","timerChild","startQuiz","setStartQuiz","submitted","setn","quiz","setQuiz","ops","setOps","name","isNaN","id","reset","setReset","opsArr","handleOpsChange","handleSettingSubmit","forEach","o","oper","push","handleReset","timer","Array","i","min","max","required","checked","temp1","temp2","temp3","temp4","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b07094c1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Question = (props) => {\r\n    var {upper_limit, lower_limit, operators, n, handler, timeout} = props;\r\n    var op = operators[Math.floor(Math.random()*operators.length)]\r\n    var generateNumber = (ul=upper_limit, ll=lower_limit) => {\r\n        var diff = parseInt(ul) - parseInt(ll)\r\n        return Math.floor(Math.random()*diff)+parseInt(ll)\r\n    }\r\n    var oper1 = generateNumber()\r\n    var oper2 = generateNumber()\r\n    var roundToTwo = (num) => {    \r\n        return +(Math.round(num + \"e+2\")  + \"e-2\");\r\n    }\r\n    var [ques, setQues] = React.useState({\r\n        q: oper1 + ' ' + op + ' ' + oper2,\r\n        a: roundToTwo(eval(oper1 + ' ' + op + ' ' + oper2)),\r\n        s: 0,\r\n        c: false\r\n    })\r\n    var handleChange = (e) => {\r\n        if(e.target.value === ''){\r\n            setQues({\r\n                ...ques,\r\n                s: 0\r\n            })\r\n        }\r\n        else {\r\n            setQues({...ques,\r\n                s: parseFloat(e.target.value),\r\n                c: roundToTwo(parseFloat(e.target.value)) === ques.a ? true : false\r\n            })\r\n        }\r\n    }\r\n    var handleSubmit = () => {\r\n        handler({[n]:{ ...ques, s:roundToTwo(ques.s)}});\r\n    }\r\n    \r\n    React.useEffect(() => {\r\n        setQues({\r\n            q: oper1 + ' ' + op + ' ' + oper2,\r\n            a: roundToTwo(eval(oper1 + ' ' + op + ' ' + oper2)),\r\n            s: 0,\r\n            c: false\r\n        })\r\n    }, [n])\r\n    \r\n    if(timeout){\r\n        handleSubmit();\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            Question : {ques.q} \r\n            <br />\r\n                Answer : <input type=\"number\" step=\"0.01\" onChange={handleChange} value={ques.s.toString()} />\r\n                <button onClick={handleSubmit}>Next</button>\r\n        </div>\r\n    )\r\n}\r\nexport default Question;","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react';\r\nimport Question from './Question'\r\n\r\nconst Quiz = (props) => {\r\n    const {lower_limit, upper_limit, ques, time, operators, removeTimer} = props;\r\n    const [question, setQuestion] = React.useState({\r\n        1: {q:'', a:'', s:'', c:false}\r\n    })\r\n    const [counter, setCounter] = React.useState({\r\n        update: true,\r\n        value: 0\r\n    })\r\n    var myInt = setTimeout(() => {setValue(values-1)},1000)\r\n    const [values, setValue] = React.useState(time)\r\n    const handler = (q) => {\r\n        setQuestion({...question, ...q})\r\n        if(counter.value + 1 > ques){\r\n            setCounter({...counter, update: true})\r\n        }\r\n        else {\r\n        setCounter({value: counter.value + 1, update: false})\r\n        }\r\n        if(!myInt.isNull){\r\n            clearTimeout(myInt)\r\n            myInt = null;\r\n        }\r\n        setValue(time) \r\n    }\r\n    const handleStart = (e) => {\r\n        e.preventDefault();\r\n        setCounter({\r\n            update: false,\r\n            value: 1\r\n        })\r\n    }\r\n    React.useEffect(() => {\r\n        removeTimer(myInt)\r\n        return clearTimeout(myInt);\r\n    },[])\r\n    return (\r\n        <div>\r\n        {counter.value > 0 ? '' :  <form onSubmit={handleStart}>\r\n            <button type=\"submit\">Start!</button>\r\n        </form>}\r\n       \r\n           {counter.update ? counter.value === parseInt(ques) ? <div> {Object.keys(question).map((x) => {\r\n               return (<div key={x} style={question[x].c ? {color: 'green'}: {color: 'red'}}>\r\n                   <h1>Question Number : {x}</h1> \r\n                   <p>Question : {question[x].q}</p>\r\n                   <p>Submitted Answer : {question[x].s}</p>\r\n                   <p>Correct Answer: {question[x].a}</p>\r\n                   <p>Correct? : {question[x].c ? 'Yes': 'No'}</p>\r\n               </div>)\r\n           })}\r\n           </div> : '' : <div>Timer : {values}<Question timeout={values === 0} n={counter.value} operators={operators} lower_limit={lower_limit} upper_limit={upper_limit} handler={handler} /></div>}\r\n        </div>\r\n    )\r\n}\r\nexport default Quiz;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Quiz from './components/Quiz';\nimport styled from 'styled-components';\nconst Col = styled.div` \n\n`\nconst Tab = styled.div`\nwidth: 100%;\ndisplay: flex;\nflex-direction: row;\nflex-wrap: wrap;\njustify-content: space-evenly;\n`\nfunction App() {\n  var op = ['+', '-','/','*'] \n  var [startQuiz, setStartQuiz] = React.useState(\n    {\n      1: false\n    }\n  )\n  var [n, setn] = React.useState({\n    value: 1,\n    submitted: false\n  })\n  const [quiz, setQuiz] = React.useState({\n    1: {\n      ques : 20,\n      lower_limit: 10,\n      upper_limit: 100,\n      time: 30,\n      operators: op\n    }\n  })\n  const [ops, setOps] = React.useState({\n    1 : {\n    '+' : true,\n    '-' : true,\n    '/': true,\n    '*': true\n    }\n  })\n  const handleChange = (e) => {\n    if(e.target.name === 'n'){\n      setn({...n, value: isNaN(parseInt(e.target.value)) ? 0 : parseInt(e.target.value)})\n    }\n    else{\n      setQuiz({\n        ...quiz,\n        [e.target.id]: {...quiz[e.target.id], [e.target.name]: e.target.value}\n      })\n    }\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // setStartQuiz(true)\n  }\n  const [reset, setReset] = React.useState({\n    1: false\n  })\n  var opsArr = []\n  const handleNSubmit = (e) => {\n    e.preventDefault();\n    var temp1 = {};\n    var temp2 = {};\n    var temp3 = {};\n    var temp4 = {};\n    [...Array(n.value).keys()].forEach( i => { temp1 = {...temp1,\n      [i+1]: {\n        ques : 20,\n        lower_limit: 10,\n        upper_limit: 100,\n        time: 30,\n        operators: op\n      }\n    }\n    opsArr.push([])\n  temp2 = {\n    ...temp2,\n    [i+1]:  {'+' : true,\n    '-' : true,\n    '/': true,\n    '*': true}\n  }\n  temp3 = {\n    ...temp3,\n    [i+1]: false\n  }\n  temp4 = {\n    ...temp4, \n    [i+1]: false\n  }\n  \n  })   \n\n    setQuiz({\n      ...quiz, ...temp1\n    })\n    setOps({\n      ...ops, ...temp2\n    })\n    setn({...n, submitted: true});\n    setStartQuiz({\n      ...startQuiz, ...temp3\n    });\n    setReset({\n      ...reset, ...temp4\n    });\n      }\n  const handleOpsChange = (e) => {\n    setOps({\n      ...ops,[e.target.id]:  {...ops[e.target.id], [e.target.name]: !ops[e.target.id][e.target.name]}\n    })\n  }\n  const handleResetNumber = () => {\n    setn({...n, submitted: false})\n  }\n  const handleSettingSubmit = (e) => {\n    setStartQuiz({ ...startQuiz,\n      [e.target.id]: true\n    })\n    setReset({\n      ...reset,\n      [e.target.id]: false\n    })\n    \n  }\n  var temp;\n    Object.keys(ops).forEach(o => {\n      temp=[];\n      Object.keys(ops[o]).forEach((oper) => {\n          if(ops[o][oper]){\n            temp.push(oper)\n          }\n      })\n      opsArr[o-1]=temp\n    })\n  var timerChild ;\n  const handleReset = (e) => {\n      setReset({\n        ...reset,\n        [e.target.id]: true\n      })\n      clearTimeout(timerChild)\n  }\n\nconst removeTimer = (timer) => {\n  timerChild = timer;\n}\n\n\n  return (\n\n    <div>\n    \n    {n.submitted ? <div><Tab>{[...Array(n.value).keys()].map( i => {\n      return(<Col key={i}>  {startQuiz[i+1] && !reset[i+1]  ? <div><button onClick = {handleReset} id={i+1}>RESET!</button>\n                            <Quiz ques={quiz[i+1].ques} \n                            lower_limit={quiz[i+1].lower_limit} \n                            upper_limit={quiz[i+1].upper_limit} \n                            time={quiz[i+1].time} \n                            operators={opsArr[i]} removeTimer={removeTimer}/></div> : \n                                            <div><h1>Enter Settings for Quiz {i+1}</h1>\n      Upper Limit : <input type=\"number\" name=\"upper_limit\" id={i+1} value={quiz[i+1].upper_limit} min={1} max={100} required onChange={handleChange} /> <br />\n      Lower Limit : <input type=\"number\" name=\"lower_limit\" id={i+1} value={quiz[i+1].lower_limit} min={1} max={100} required onChange={handleChange} /> <br />\n      Number of Questions : <input type=\"number\" name=\"ques\" id={i+1} value={quiz[i+1].ques} min={1} max={20} required onChange={handleChange}/> <br />\n      Time in (s): <input type=\"number\" name=\"time\" id={i+1} value={quiz[i+1].time} min={2} max={60} required onChange={handleChange}/> <br />\n      Choose Operators : {op.map((o) => { return(<span key={o}><input type=\"checkbox\" id={i+1} name={o}  required checked={ops[i+1][o]} onChange={handleOpsChange} />{o}  </span>)})}\n      <button onClick={handleSettingSubmit} id={i+1}>Start!</button></div>\n      }</Col>\n      \n      )\n    })}\n    \n    </Tab><button onClick={handleResetNumber}>Reset Number of Quizzes</button></div>\n      :\n      <div>\n      Number of Simultaneous Quizzes : <input type=\"number\" name='n' min={1} max={3} value={n.value.toString()} onChange={handleChange} />\n      <br />\n      <button onClick={handleNSubmit}>Next</button>\n      </div>\n    \n    }\n\n    \n    {/* <Col>\n                  </Col> */}\n    </div>\n    \n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}